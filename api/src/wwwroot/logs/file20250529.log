2025-05-29 11:13:57.739 +02:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-05-29 11:13:57.783 +02:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-05-29 11:13:57.789 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-05-29 11:13:57.793 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-05-29 11:13:57.810 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-05-29 11:13:57.823 +02:00 [INF] Applying migration '20250529091346_addSeo'.
2025-05-29 11:13:57.880 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE [SeoConnections] (
    [Id] uniqueidentifier NOT NULL,
    [TrackDate] datetime2 NOT NULL,
    [Ip] char(15) NOT NULL,
    [CreationDate] datetime2 NOT NULL,
    [UpdateDate] datetime2 NOT NULL,
    CONSTRAINT [PK_SeoConnections] PRIMARY KEY ([Id])
);
2025-05-29 11:13:57.884 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_SeoConnections_CreationDate] ON [SeoConnections] ([CreationDate]);
2025-05-29 11:13:57.887 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX [IX_SeoConnections_Id] ON [SeoConnections] ([Id]);
2025-05-29 11:13:57.891 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_SeoConnections_TrackDate] ON [SeoConnections] ([TrackDate]);
2025-05-29 11:13:57.895 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX [IX_SeoConnections_UpdateDate] ON [SeoConnections] ([UpdateDate]);
2025-05-29 11:13:57.899 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250529091346_addSeo', N'8.0.7');
2025-05-29 11:17:49.539 +02:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Climates] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.626 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stations] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.633 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.641 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Categories] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.746 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 1
2025-05-29 11:17:49.807 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 2
2025-05-29 11:17:49.814 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 3
2025-05-29 11:17:49.822 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stages] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.843 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Families] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.855 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Variants] AS [v]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:49.888 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:17:49.957 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:17:50.022 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 1
2025-05-29 11:17:50.039 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 5
2025-05-29 11:17:50.046 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Flows] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:50.054 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Messages] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:50.060 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Packages] AS [p]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:17:50.282 +02:00 [INF] User profile is available. Using 'C:\Users\laure\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-29 11:17:50.361 +02:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2025-05-29 11:17:50.363 +02:00 [INF] Quartz Scheduler created
2025-05-29 11:17:50.364 +02:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2025-05-29 11:17:50.365 +02:00 [INF] RAMJobStore initialized.
2025-05-29 11:17:50.366 +02:00 [INF] Quartz Scheduler 3.14.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2025-05-29 11:17:50.367 +02:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2025-05-29 11:17:50.369 +02:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2025-05-29 11:17:50.553 +02:00 [INF] Now listening on: http://[::]:5000
2025-05-29 11:17:50.555 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-29 11:17:50.556 +02:00 [INF] Hosting environment: Development
2025-05-29 11:17:50.557 +02:00 [INF] Content root path: D:\projets\MonPotager\api\src
2025-05-29 11:17:50.559 +02:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2025-05-29 11:17:50.681 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger - null null
2025-05-29 11:17:50.805 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger - 301 0 null 125.1048ms
2025-05-29 11:17:50.811 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - null null
2025-05-29 11:17:50.883 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 72.1396ms
2025-05-29 11:17:50.916 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui.css - null null
2025-05-29 11:17:50.916 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - null null
2025-05-29 11:17:50.919 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - null null
2025-05-29 11:17:50.973 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-05-29 11:17:50.973 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-05-29 11:17:50.977 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui.css - 200 152034 text/css 61.3747ms
2025-05-29 11:17:50.977 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 57.7377ms
2025-05-29 11:17:50.988 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-05-29 11:17:50.990 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 73.4925ms
2025-05-29 11:17:51.215 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - null null
2025-05-29 11:17:51.254 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/favicon-32x32.png - null null
2025-05-29 11:17:51.256 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-05-29 11:17:51.257 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/favicon-32x32.png - 200 628 image/png 3.2142ms
2025-05-29 11:17:51.502 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 287.2029ms
2025-05-29 11:18:22.464 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - null null
2025-05-29 11:18:22.470 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 6.3241ms
2025-05-29 11:18:22.498 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui.css - null null
2025-05-29 11:18:22.499 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - null null
2025-05-29 11:18:22.499 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - null null
2025-05-29 11:18:22.509 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-05-29 11:18:22.528 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui.css - 200 152034 text/css 28.226ms
2025-05-29 11:18:22.528 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-05-29 11:18:22.532 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-05-29 11:18:22.534 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 35.3205ms
2025-05-29 11:18:22.535 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 36.5314ms
2025-05-29 11:18:22.640 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - null null
2025-05-29 11:18:22.641 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/favicon-32x32.png - null null
2025-05-29 11:18:22.644 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-05-29 11:18:22.645 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/favicon-32x32.png - 200 628 image/png 4.4649ms
2025-05-29 11:18:22.757 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 117.4637ms
2025-05-29 11:18:51.479 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/v1/track - null 0
2025-05-29 11:18:51.490 +02:00 [INF] CORS policy execution successful.
2025-05-29 11:18:51.748 +02:00 [INF] Executing endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:18:51.761 +02:00 [INF] Route matched with {action = "TrackingForSeo", controller = "Seo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] TrackingForSeo() on controller api.Controllers.Seo.SeoController (api).
2025-05-29 11:18:51.776 +02:00 [INF] Executing action method api.Controllers.Seo.SeoController.TrackingForSeo (api) - Validation state: "Valid"
2025-05-29 11:19:00.565 +02:00 [INF] Executed action method api.Controllers.Seo.SeoController.TrackingForSeo (api), returned result Microsoft.AspNetCore.Mvc.OkResult in 8784.3396ms.
2025-05-29 11:19:00.572 +02:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-05-29 11:19:00.577 +02:00 [INF] Executed action api.Controllers.Seo.SeoController.TrackingForSeo (api) in 8811.2787ms
2025-05-29 11:19:00.578 +02:00 [INF] Executed endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:19:00.584 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/v1/track - 200 0 null 9104.7116ms
2025-05-29 11:19:04.050 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/v1/track - null 0
2025-05-29 11:19:04.053 +02:00 [INF] CORS policy execution successful.
2025-05-29 11:19:04.054 +02:00 [INF] Executing endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:19:04.057 +02:00 [INF] Route matched with {action = "TrackingForSeo", controller = "Seo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] TrackingForSeo() on controller api.Controllers.Seo.SeoController (api).
2025-05-29 11:19:04.060 +02:00 [INF] Executing action method api.Controllers.Seo.SeoController.TrackingForSeo (api) - Validation state: "Valid"
2025-05-29 11:19:59.095 +02:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Climates] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.176 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stations] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.181 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.186 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Categories] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.257 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 1
2025-05-29 11:19:59.306 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 2
2025-05-29 11:19:59.312 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 3
2025-05-29 11:19:59.317 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stages] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.333 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Families] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.342 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Variants] AS [v]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.374 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:19:59.441 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:19:59.501 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 1
2025-05-29 11:19:59.515 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 5
2025-05-29 11:19:59.522 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Flows] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.527 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Messages] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.533 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Packages] AS [p]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:19:59.736 +02:00 [INF] User profile is available. Using 'C:\Users\laure\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-29 11:19:59.796 +02:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2025-05-29 11:19:59.797 +02:00 [INF] Quartz Scheduler created
2025-05-29 11:19:59.798 +02:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2025-05-29 11:19:59.799 +02:00 [INF] RAMJobStore initialized.
2025-05-29 11:19:59.800 +02:00 [INF] Quartz Scheduler 3.14.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2025-05-29 11:19:59.801 +02:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2025-05-29 11:19:59.802 +02:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2025-05-29 11:19:59.967 +02:00 [INF] Now listening on: http://[::]:5000
2025-05-29 11:19:59.968 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-29 11:19:59.969 +02:00 [INF] Hosting environment: Development
2025-05-29 11:19:59.970 +02:00 [INF] Content root path: D:\projets\MonPotager\api\src
2025-05-29 11:19:59.973 +02:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2025-05-29 11:20:00.014 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - null null
2025-05-29 11:20:00.014 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/v1/track - null 0
2025-05-29 11:20:00.112 +02:00 [INF] CORS policy execution successful.
2025-05-29 11:20:00.242 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 229.312ms
2025-05-29 11:20:00.333 +02:00 [INF] Executing endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:20:00.346 +02:00 [INF] Route matched with {action = "TrackingForSeo", controller = "Seo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] TrackingForSeo() on controller api.Controllers.Seo.SeoController (api).
2025-05-29 11:20:00.357 +02:00 [INF] Executing action method api.Controllers.Seo.SeoController.TrackingForSeo (api) - Validation state: "Valid"
2025-05-29 11:20:03.443 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - null null
2025-05-29 11:20:18.232 +02:00 [INF] Executed DbCommand (288ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = DateTime2), @p2='?' (Size = 15) (DbType = AnsiString), @p3='?' (DbType = DateTime2), @p4='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [SeoConnections] ([Id], [CreationDate], [Ip], [TrackDate], [UpdateDate])
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-05-29 11:20:19.943 +02:00 [INF] Executed action method api.Controllers.Seo.SeoController.TrackingForSeo (api), returned result Microsoft.AspNetCore.Mvc.OkResult in 19580.2056ms.
2025-05-29 11:20:19.953 +02:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-05-29 11:20:19.959 +02:00 [INF] Executed action api.Controllers.Seo.SeoController.TrackingForSeo (api) in 19608.3786ms
2025-05-29 11:20:19.961 +02:00 [INF] Executed endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:20:19.977 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/v1/track - 200 0 null 19965.1827ms
2025-05-29 11:20:20.029 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16586.5981ms
2025-05-29 11:21:14.069 +02:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Climates] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.146 +02:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stations] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.151 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.156 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Categories] AS [c]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.219 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 1
2025-05-29 11:21:14.261 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 2
2025-05-29 11:21:14.266 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Image], [c].[Label]
FROM [Categories] AS [c]
WHERE [c].[Id] = 3
2025-05-29 11:21:14.271 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Stages] AS [s]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.285 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Families] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.292 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Variants] AS [v]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.319 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:21:14.385 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[Id], [v].[CreationDate], [v].[FamilyId], [v].[MaxMaturationDaysCount], [v].[MinMaturationDaysCount], [v].[UpdateDate], [v].[Designation_Image], [v].[Designation_ImageSource], [v].[Designation_Name], [v].[HarvestMonths_April], [v].[HarvestMonths_August], [v].[HarvestMonths_December], [v].[HarvestMonths_February], [v].[HarvestMonths_January], [v].[HarvestMonths_July], [v].[HarvestMonths_June], [v].[HarvestMonths_March], [v].[HarvestMonths_May], [v].[HarvestMonths_November], [v].[HarvestMonths_October], [v].[HarvestMonths_September], [v].[SowingMonths_April], [v].[SowingMonths_August], [v].[SowingMonths_December], [v].[SowingMonths_February], [v].[SowingMonths_January], [v].[SowingMonths_July], [v].[SowingMonths_June], [v].[SowingMonths_March], [v].[SowingMonths_May], [v].[SowingMonths_November], [v].[SowingMonths_October], [v].[SowingMonths_September]
FROM [Variants] AS [v]
2025-05-29 11:21:14.456 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 1
2025-05-29 11:21:14.475 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [s].[Id], [s].[CategoryId], [s].[Image], [s].[IsMultiple], [s].[Label], [s].[Rank], [c].[Id], [c].[Image], [c].[Label]
FROM [Stages] AS [s]
INNER JOIN [Categories] AS [c] ON [s].[CategoryId] = [c].[Id]
WHERE [c].[Id] = 1 AND [s].[Rank] = 5
2025-05-29 11:21:14.481 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Flows] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.486 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Messages] AS [m]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.492 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Packages] AS [p]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-29 11:21:14.707 +02:00 [INF] User profile is available. Using 'C:\Users\laure\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-29 11:21:14.766 +02:00 [INF] Initialized Scheduler Signaller of type: Quartz.Core.SchedulerSignalerImpl
2025-05-29 11:21:14.767 +02:00 [INF] Quartz Scheduler created
2025-05-29 11:21:14.769 +02:00 [INF] JobFactory set to: Quartz.Simpl.MicrosoftDependencyInjectionJobFactory
2025-05-29 11:21:14.770 +02:00 [INF] RAMJobStore initialized.
2025-05-29 11:21:14.771 +02:00 [INF] Quartz Scheduler 3.14.0.0 - 'QuartzScheduler' with instanceId 'NON_CLUSTERED' initialized
2025-05-29 11:21:14.772 +02:00 [INF] Using thread pool 'Quartz.Simpl.DefaultThreadPool', size: 10
2025-05-29 11:21:14.774 +02:00 [INF] Using job store 'Quartz.Simpl.RAMJobStore', supports persistence: False, clustered: False
2025-05-29 11:21:14.922 +02:00 [INF] Now listening on: http://[::]:5000
2025-05-29 11:21:14.923 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-29 11:21:14.924 +02:00 [INF] Hosting environment: Development
2025-05-29 11:21:14.925 +02:00 [INF] Content root path: D:\projets\MonPotager\api\src
2025-05-29 11:21:14.927 +02:00 [INF] Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2025-05-29 11:21:15.007 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/index.html - null null
2025-05-29 11:21:15.171 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/index.html - 200 null text/html;charset=utf-8 164.7325ms
2025-05-29 11:21:15.618 +02:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - null null
2025-05-29 11:21:15.863 +02:00 [INF] Request finished HTTP/1.1 GET http://localhost:5000/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 245.7073ms
2025-05-29 11:21:31.472 +02:00 [INF] Request starting HTTP/1.1 POST http://localhost:5000/v1/track - null 0
2025-05-29 11:21:31.485 +02:00 [INF] CORS policy execution successful.
2025-05-29 11:21:31.690 +02:00 [INF] Executing endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:21:31.702 +02:00 [INF] Route matched with {action = "TrackingForSeo", controller = "Seo"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] TrackingForSeo() on controller api.Controllers.Seo.SeoController (api).
2025-05-29 11:21:31.712 +02:00 [INF] Executing action method api.Controllers.Seo.SeoController.TrackingForSeo (api) - Validation state: "Valid"
2025-05-29 11:21:33.541 +02:00 [INF] Executed action method api.Controllers.Seo.SeoController.TrackingForSeo (api), returned result Microsoft.AspNetCore.Mvc.OkResult in 1824.2253ms.
2025-05-29 11:21:33.548 +02:00 [INF] Executing StatusCodeResult, setting HTTP status code 200
2025-05-29 11:21:33.553 +02:00 [INF] Executed action api.Controllers.Seo.SeoController.TrackingForSeo (api) in 1845.5945ms
2025-05-29 11:21:33.554 +02:00 [INF] Executed endpoint 'api.Controllers.Seo.SeoController.TrackingForSeo (api)'
2025-05-29 11:21:33.561 +02:00 [INF] Request finished HTTP/1.1 POST http://localhost:5000/v1/track - 200 0 null 2088.6473ms
